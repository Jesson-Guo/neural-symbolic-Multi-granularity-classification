import torch.nn.functional as F
import torch.nn as nn
import torch
import openai
import os
import numpy as np
from torchmetrics.clustering import DunnIndex

from src.gpt import GPT
import json


a = {'Plan1': {'Wolves': [269, 270, 271], 'Canids': [272, 273, 274, 275, 276, 277, 278, 279, 280], 'Felines': [281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], 'Bears': [294, 295, 296, 297], 'SmallMammals': [298, 299, 330, 331, 332, 333, 334, 335, 336, 337, 338], 'HoovedAnimals': [339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], 'CamelsAndLlamas': [354, 355], 'Mustelids': [356, 357, 358, 359, 360, 361, 362], 'OtherMammals': [363, 364], 'Primates': [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], 'LemursAndAllies': [383, 384], 'Pandas': [387, 388]}, 'Plan2': {'Carnivores': [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 356, 357, 358, 359, 360, 361, 362, 387, 388], 'Herbivores': [330, 331, 332, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], 'Omnivores': [298, 299, 333, 334, 335, 336, 337, 338, 363, 364], 'Primates': [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], 'LemursAndAllies': [383, 384]}}

b = [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388]

plans = []
for i, plan in a.items():
    s = set()
    for ls in plan.values():
        for l in ls:
            s.add(l)
    plans.append(s)

remain = []
for s in plans:
    r = []
    for i in b:
        if not i in s:
            r.append(i)
    remain.append(r)

print(remain)
